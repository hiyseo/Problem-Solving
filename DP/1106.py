# 문제
# 세계적인 호텔인 형택 호텔의 사장인 김형택은 이번에 수입을 조금 늘리기 위해서 홍보를 하려고 한다.
# 형택이가 홍보를 할 수 있는 도시가 주어지고, 각 도시별로 홍보하는데 드는 비용과, 그 때 몇 명의 호텔 고객이 늘어나는지에 대한 정보가 있다.
# 예를 들어, “어떤 도시에서 9원을 들여서 홍보하면 3명의 고객이 늘어난다.”와 같은 정보이다. 
# 이때, 이러한 정보에 나타난 돈에 정수배 만큼을 투자할 수 있다. 즉, 9원을 들여서 3명의 고객, 18원을 들여서 6명의 고객, 27원을 들여서 9명의 고객을 늘어나게 할 수 있지만, 3원을 들여서 홍보해서 1명의 고객, 12원을 들여서 4명의 고객을 늘어나게 할 수는 없다.

# 각 도시에는 무한 명의 잠재적인 고객이 있다. 이때, 호텔의 고객을 적어도 C명 늘이기 위해 형택이가 투자해야 하는 돈의 최솟값을 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 C와 형택이가 홍보할 수 있는 도시의 개수 N이 주어진다. C는 1,000보다 작거나 같은 자연수이고, N은 20보다 작거나 같은 자연수이다. 
# 둘째 줄부터 N개의 줄에는 각 도시에서 홍보할 때 대는 비용과 그 비용으로 얻을 수 있는 고객의 수가 주어진다. 이 값은 100보다 작거나 같은 자연수이다.

# 출력
# 첫째 줄에 문제의 정답을 출력한다.

# 예제 입력 1 
# 12 2
# 3 5
# 1 1
# 예제 출력 1 
# 8

# 예제 입력 2 
# 10 3
# 3 1
# 2 2
# 1 3
# 예제 출력 2 
# 4

# 예제 입력 3 
# 10 10
# 1 1
# 2 2
# 3 3
# 4 4
# 5 5
# 6 6
# 7 7
# 8 8
# 9 9
# 10 10
# 예제 출력 3 
# 10

# 예제 입력 4 
# 100 6
# 4 9
# 9 11
# 3 4
# 8 7
# 1 2
# 9 8
# 예제 출력 4 
# 45

### 수도코드 ###
# C(적어도 늘려야 하는 최소 고객수), N(도시의 개수) 입력 (1<= C <= 1000, 1<= N <= 20)
# cost(비용), customer(늘어나는 사람 수) 입력 받음
# for cost, customer in costs: # 20
    # for i in range(customer, C+1): # 1000
        # dp[i] = min(dp[i], dp[i-customer]+cost)

### key 핵심 ###
# 우선, N이 크지 않으므로 모든 가능한 경우에 대해서 dp를 전부 업데이트해도 됨
# 가능한 경우의 수가 많으므로 dp로 최소값 갱신하는게 효과적
# 한번씩 다 거치기 때문에 뒤에서 갱신이 되더라도 최소값은 반영됨
# 또한, C로 도달하는 경우가 존재하더라도 최소가 아닐 수 있음.
# customer의 최대만큼 더 탐색해봐야함. 가령 customer가 최대인데 cost가 최소인 경우가 있을듯..!


C, N = map(int, input().split())
costs = []
max_customer = -10**9
for _ in range(N):
    cost, customer = map(int, input().split())
    max_customer = max(max_customer, customer)
    costs.append((cost, customer))

dp = [float('inf') for _ in range(C+max_customer+1)]
dp[0] = 0

for cost, customer in costs:
    for i in range(customer, C+max_customer+1):
        dp[i] = min(dp[i], dp[i-customer]+cost)

# print(f"dp: {dp}")
min_val = 10**9
for i in range(C, C+int(max_customer)+1):
    min_val = min(min_val, dp[i])
print(min_val)

